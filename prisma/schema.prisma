// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  ADMIN
  USER
}

model User {
  id                String   @id @default(uuid())
  email             String   @unique
  password          String
  socialConnectiion Boolean  @default(false)
  role              UserRole @default(USER)

  createdAt DateTime @default(now())
  updateAt  DateTime @updatedAt

  profile  Profile?
  Thread   Thread?  @relation(fields: [threadId], references: [id])
  threadId String?
  like     Like[]

  @@map("user")
}

model Profile {
  id       String   @id @default(uuid())
  username String
  fullName String
  bio      String?  @default("silahkan tambahkan bio profile")
  cover    String?  @default("http://localhost:3000/assets/cover.png")
  image    String?  @default("http://localhost:3000/assets/avatar.png")
  userId   String   @unique
  user     User     @relation(fields: [userId], references: [id])
  thread   Thread[]

  followingId String?
  following   Profile[] @relation(name: "follow")
  followings  Profile?  @relation(name: "follow", fields: [followingId], references: [id])

  followerId String?
  follower   Profile[] @relation(name: "follower")
  followers  Profile?  @relation(name: "follower", fields: [followerId], references: [id])

  @@map("profile")
}

model Thread {
  id        String  @id @default(uuid())
  text      String
  image     String?
  profileId String
  threadId  String?
  like      Like[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  replies Thread[] @relation(name: "PostToReplies")
  profile Profile? @relation(fields: [profileId], references: [id])
  replie  Thread?  @relation(name: "PostToReplies", fields: [threadId], references: [id])
  User    User[]

  @@map("thread")
}

model Like {
  id       String @id @default(uuid())
  userId   String
  threadId String

  user   User   @relation(fields: [userId], references: [id])
  thread Thread @relation(fields: [threadId], references: [id])
}
